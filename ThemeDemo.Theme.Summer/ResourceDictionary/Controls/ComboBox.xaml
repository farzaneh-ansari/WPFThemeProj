<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    

    <Style x:Key="ComboBoxTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="180"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="180"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="ContentBorder" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="1" />
            <Border x:Name="ButtonBorder"
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource ComboBoxGlyphBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ComboBoxPressedBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ResourceKey=ComboBoxSelectedGlyph}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlDisabledBackgroundBrush}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderBrush}" />
                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ControlDisabledBackgroundBrush}" />
                
                <Setter Property="Foreground" Value="{DynamicResource ControlDisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ControlDisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource TextBoxBorderBrush}"/>
    </ControlTemplate>-->



    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="TextElement.Foreground"  Value="{DynamicResource ComboBoxForegroundBrush}"/>
                    
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="Border" SnapsToDevicePixels="True" Padding="2,2,2,2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <TextBlock Name="Content">
                                        <ContentPresenter/> 
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                        <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource ComboBoxItemSelectedForeground}"/>
                                       
                                    </Trigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlDisabledBackgroundBrush}"/>
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlDisabledForegroundBrush}"/>
                                    </Trigger>
                                    
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Template="{DynamicResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <TextBox x:Name="PART_EditableTextBox" 
                            Style="{DynamicResource ComboBoxTextBoxStyle}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            />
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            Margin="0"
                            PopupAnimation="Slide">
                            <Grid 
                              Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource ComboBoxBackgroundBrush}"
                                    BorderThickness="0"                                    
                                    BorderBrush="{DynamicResource ComboBoxBorderBrush}"/>
                                <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
</ResourceDictionary>



